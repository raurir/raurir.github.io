// below is compressed a version of perlin noise from josephg's github: https://github.com/josephg/noisejs

/*
 * A speed-improved perlin and simplex noise algorithms for 2D.
 *
 * Based on example code by Stefan Gustavson (stegu@itn.liu.se).
 * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).
 * Better rank ordering method by Stefan Gustavson in 2012.
 * Converted to Javascript by Joseph Gentle.
 *
 * Version 2012-03-09
 *
 * This code was placed in the public domain by its original author,
 * Stefan Gustavson. You may use it as you see fit, but
 * attribution is appreciated.
 *
 */

!function(a){function c(a,b,c){this.x=a,this.y=b,this.z=c}function l(a){return a*a*a*(a*(6*a-15)+10)}function m(a,b,c){return(1-c)*a+c*b}var b=a.noise={};c.prototype.dot2=function(a,b){return this.x*a+this.y*b},c.prototype.dot3=function(a,b,c){return this.x*a+this.y*b+this.z*c};var d=[new c(1,1,0),new c(-1,1,0),new c(1,-1,0),new c(-1,-1,0),new c(1,0,1),new c(-1,0,1),new c(1,0,-1),new c(-1,0,-1),new c(0,1,1),new c(0,-1,1),new c(0,1,-1),new c(0,-1,-1)],e=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],f=new Array(512),g=new Array(512);b.seed=function(a){a>0&&a<1&&(a*=65536),(a=Math.floor(a))<256&&(a|=a<<8);for(var b=0;b<256;b++){var c;c=1&b?e[b]^255&a:e[b]^a>>8&255,f[b]=f[b+256]=c,g[b]=g[b+256]=d[c%12]}},b.seed(0);var h=.5*(Math.sqrt(3)-1),i=(3-Math.sqrt(3))/6,j=1/3,k=1/6;b.simplex2=function(a,b){var c,d,e,p,q,j=(a+b)*h,k=Math.floor(a+j),l=Math.floor(b+j),m=(k+l)*i,n=a-k+m,o=b-l+m;n>o?(p=1,q=0):(p=0,q=1);var r=n-p+i,s=o-q+i,t=n-1+2*i,u=o-1+2*i;k&=255,l&=255;var v=g[k+f[l]],w=g[k+p+f[l+q]],x=g[k+1+f[l+1]],y=.5-n*n-o*o;y<0?c=0:(y*=y,c=y*y*v.dot2(n,o));var z=.5-r*r-s*s;z<0?d=0:(z*=z,d=z*z*w.dot2(r,s));var A=.5-t*t-u*u;return A<0?e=0:(A*=A,e=A*A*x.dot2(t,u)),70*(c+d+e)},b.simplex3=function(a,b,c){var d,e,h,i,t,u,v,w,x,y,l=(a+b+c)*j,m=Math.floor(a+l),n=Math.floor(b+l),o=Math.floor(c+l),p=(m+n+o)*k,q=a-m+p,r=b-n+p,s=c-o+p;q>=r?r>=s?(t=1,u=0,v=0,w=1,x=1,y=0):q>=s?(t=1,u=0,v=0,w=1,x=0,y=1):(t=0,u=0,v=1,w=1,x=0,y=1):r<s?(t=0,u=0,v=1,w=0,x=1,y=1):q<s?(t=0,u=1,v=0,w=0,x=1,y=1):(t=0,u=1,v=0,w=1,x=1,y=0);var z=q-t+k,A=r-u+k,B=s-v+k,C=q-w+2*k,D=r-x+2*k,E=s-y+2*k,F=q-1+3*k,G=r-1+3*k,H=s-1+3*k;m&=255,n&=255,o&=255;var I=g[m+f[n+f[o]]],J=g[m+t+f[n+u+f[o+v]]],K=g[m+w+f[n+x+f[o+y]]],L=g[m+1+f[n+1+f[o+1]]],M=.6-q*q-r*r-s*s;M<0?d=0:(M*=M,d=M*M*I.dot3(q,r,s));var N=.6-z*z-A*A-B*B;N<0?e=0:(N*=N,e=N*N*J.dot3(z,A,B));var O=.6-C*C-D*D-E*E;O<0?h=0:(O*=O,h=O*O*K.dot3(C,D,E));var P=.6-F*F-G*G-H*H;return P<0?i=0:(P*=P,i=P*P*L.dot3(F,G,H)),32*(d+e+h+i)},b.perlin2=function(a,b){var c=Math.floor(a),d=Math.floor(b);a-=c,b-=d,c&=255,d&=255;var e=g[c+f[d]].dot2(a,b),h=g[c+f[d+1]].dot2(a,b-1),i=g[c+1+f[d]].dot2(a-1,b),j=g[c+1+f[d+1]].dot2(a-1,b-1),k=l(a);return m(m(e,i,k),m(h,j,k),l(b))},b.perlin3=function(a,b,c){var d=Math.floor(a),e=Math.floor(b),h=Math.floor(c);a-=d,b-=e,c-=h,d&=255,e&=255,h&=255;var i=g[d+f[e+f[h]]].dot3(a,b,c),j=g[d+f[e+f[h+1]]].dot3(a,b,c-1),k=g[d+f[e+1+f[h]]].dot3(a,b-1,c),n=g[d+f[e+1+f[h+1]]].dot3(a,b-1,c-1),o=g[d+1+f[e+f[h]]].dot3(a-1,b,c),p=g[d+1+f[e+f[h+1]]].dot3(a-1,b,c-1),q=g[d+1+f[e+1+f[h]]].dot3(a-1,b-1,c),r=g[d+1+f[e+1+f[h+1]]].dot3(a-1,b-1,c-1),s=l(a),t=l(b),u=l(c);return m(m(m(i,o,s),m(j,p,s),u),m(m(k,q,s),m(n,r,s),u),t)}}(this);

define("noise", noise);