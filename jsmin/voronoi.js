"use strict";var isNode=typeof module!=="undefined";var voronoi=function(){var con=console;var dot;var sites;var site=[];var regions=[];var bounds=[];var sizeX,sizeY;var width,height;function init(options){dot=options.dot||1;sites=options.sites||10;sizeX=options.sizeX||200;sizeY=options.sizeY||200;width=sizeX*dot;height=sizeY*dot;return{width:width,height:height}}function sq2(x1,x2,y1,y2){var dx=x1-x2,dy=y1-y2;return dx*dx+dy*dy}function manhattan(x,x2,y,y2){return Math.abs(x-x2)+Math.abs(y-y2)}function minkowsky(X1,X2,Y1,Y2){return(Math.abs(X2-X1)*3+Math.abs(Y2-Y1)*3)*.33}function nearest_site(x1,y1){var k,ret=0;var d,dist=0;for(k=0;k<sites;k++){var x2=site[k][0];var y2=site[k][1];d=sq2(x1,x2,y1,y2);if(!k||d<dist){dist=d;ret=k}}return ret}function genPoints(pointIterator){if(pointIterator==undefined)return con.warn("need to pass in a pointIterator function, which returns an array");for(var k=0;k<sites;k++){site[k]=pointIterator(k,sites);regions[k]=[];bounds[k]=[]}}function genMap(){var i,j,k,nearest=[],color,index,pixels=sizeX*sizeY;var a=(new Date).getTime();for(i=0;i<sizeY;i++){for(j=0;j<sizeX;j++){index=i*sizeX+j;nearest[index]=nearest_site(j,i);if(index%1e5==0)con.log("findSites",Math.round(index/pixels*100)+"%")}}var b=(new Date).getTime();con.log("Found sites",b-a);for(i=0;i<sizeY;i++){for(j=0;j<sizeX;j++){var index=i*sizeX+j;var ns=nearest[index];regions[ns].push([j,i]);if(bounds[ns][0]==undefined){bounds[ns][0]=i}else if(i<bounds[ns][0]){bounds[ns][0]=i}if(bounds[ns][1]==undefined){bounds[ns][1]=j}else if(j>bounds[ns][1]){bounds[ns][1]=j}if(bounds[ns][2]==undefined){bounds[ns][2]=i}else if(i>bounds[ns][2]){bounds[ns][2]=i}if(bounds[ns][3]==undefined){bounds[ns][3]=j}else if(j<bounds[ns][3]){bounds[ns][3]=j}if(index%1e5==0)con.log("generatingRegion",Math.round(index/pixels*100)+"%")}}var c=(new Date).getTime();con.log("Generated regions",c-b);calcRegionBounds()}function drawRegions(renderRegion){if(renderRegion==undefined)con.warn("need to pass in a renderRegion function.");for(k=0;k<sites;k++){renderRegion(regions[k],bounds[k]);con.log("drawRegions",Math.round(k/sites*100)+"%")}}function drawSites(ctx){for(k=0;k<sites;k++){ctx.fillStyle="blue";var centreMarker=2;var x=site[k][0]*dot;var y=site[k][1]*dot;ctx.fillRect(x-centreMarker/2,y-centreMarker/2,centreMarker,centreMarker)}}function calcRegionBounds(){for(k=0;k<sites;k++){bounds[k]={x:bounds[k][3]*dot,y:bounds[k][0]*dot,width:(bounds[k][1]-bounds[k][3])*dot,height:(bounds[k][2]-bounds[k][0])*dot}}}function drawRegionBounds(ctx){for(k=0;k<sites;k++){ctx.fillStyle="rgba(0,0,255,0.2)";var b=bounds[k];ctx.fillRect(b.x,b.y,b.width,b.height)}}return{init:init,genMap:genMap,genPoints:genPoints,drawRegions:drawRegions,drawRegionBounds:drawRegionBounds,drawSites:drawSites}}();if(isNode)module.exports=voronoi;