"use strict";var _slicedToArray=function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr))return function(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{!_n&&_i.return&&_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i);throw new TypeError("Invalid attempt to destructure non-iterable instance")},isNode="undefined"!=typeof module,SHAPE_L={0:{blocks:[[1,1],[0,1]],points:[{x:0,y:0},{x:2,y:0},{x:2,y:2},{x:1,y:2},{x:1,y:1},{x:0,y:1}]},1:{blocks:[[0,1],[1,1]],points:[{x:1,y:0},{x:2,y:0},{x:2,y:2},{x:0,y:2},{x:0,y:1},{x:1,y:1}]},2:{blocks:[[1,0],[1,1]],points:[{x:0,y:0},{x:1,y:0},{x:1,y:1},{x:2,y:1},{x:2,y:2},{x:0,y:2}]},3:{blocks:[[1,1],[1,0]],points:[{x:0,y:0},{x:2,y:0},{x:2,y:1},{x:1,y:1},{x:1,y:2},{x:0,y:2}]}},tessellation=function(){return function(){var r=rand.instance(),c=colours.instance(r),bmp=dom.canvas(1,1),ctx=bmp.ctx,progress=void 0,sh=void 0,sw=void 0,size=void 0,attempt=0,blocks=void 0,block=void 0,occupied=void 0,spots=[],spotId=1,settings={},isBusy=function(nextOccupied,x,y){return x<0?0:blocks-1<x?0:y<0?0:blocks-1<y?0:nextOccupied[y*blocks+x]},testPolygon=function(shapeBlocks,position){for(var test=occupied.slice(),i=0;i<2;i++)for(var j=0;j<2;j++){var x=position.x+j,y=position.y+i;if(!(x<0))if(!(blocks-1<x))if(!(y<0))if(!(blocks-1<y))if(0!==shapeBlocks[i][j]){var blockIndex=y*blocks+x;if(0<test[blockIndex])return!1;test[blockIndex]=spotId}}var nextOccupied;return!(nextOccupied=test).some(function(occupied,positionIndex){var x=positionIndex%blocks,y=Math.floor(positionIndex/blocks);if(0===occupied){var top=isBusy(nextOccupied,x,y-1),topRight=isBusy(nextOccupied,x+1,y-1),right=isBusy(nextOccupied,x+1,y),bottomRight=isBusy(nextOccupied,x+1,y+1),bottom=isBusy(nextOccupied,x,y+1),bottomLeft=isBusy(nextOccupied,x-1,y+1),left=isBusy(nextOccupied,x-1,y);if(left&&right&&top&&bottom)return!0;if(top&&topRight&&bottomRight&&bottom)return!0;if(right&&bottomRight&&bottomLeft&&left)return!0}return!1})&&(occupied=test,!0)},drawShape=function(rotation,position){var shape=SHAPE_L[rotation];if(!testPolygon(shape.blocks,position))return!1;var polygon=function(points,_ref4){var lineWidth=_ref4.lineWidth,strokeStyle=_ref4.strokeStyle,fillStyle=_ref4.fillStyle,polygon=dom.canvas(2*block*sw,2*block*sw);polygon.ctx.beginPath(),points.forEach(function(_ref5,i){var x=_ref5.x,y=_ref5.y;polygon.ctx[0==i?"moveTo":"lineTo"](x*block*sw,y*block*sh)}),polygon.ctx.closePath();var gradient=polygon.ctx.createLinearGradient(0,0,r.getNumber(block,2*block),r.getNumber(block,2*block));return gradient.addColorStop(0,fillStyle),gradient.addColorStop(1,c.mutateColour(fillStyle,20)),polygon.ctx.fillStyle=gradient,polygon.ctx.fill(),polygon.ctx.strokeStyle=strokeStyle,polygon.ctx.lineWidth=lineWidth,polygon.ctx.stroke(),polygon}(shape.points,{fillStyle:c.getNextColour(),lineWidth:.1,strokeStyle:"#000"}),x=position.x/blocks*sw,y=position.y/blocks*sh;ctx.save(),ctx.translate(x-sw/2,y-sh/2),ctx.drawImage(polygon.canvas,0,0),ctx.restore();var sp=function(shapeBlocks,position){for(var blocks=[],i=0;i<shapeBlocks.length;i++)for(var row=shapeBlocks[i],j=0;j<row.length;j++)if(1===row[j]){var x=position.x+j,y=position.y+i;blocks.push({x:x,y:y})}return blocks}(shape.blocks,position);return spots.push({id:spotId,blocks:sp}),spotId++,!0},complete=!1,drawSet=function drawSet(){var ratioComplete=++attempt/1e5,occComplete=occupied.filter(function(b){return 0<b}).length/occupied.length==1;if(!(complete||occComplete||1<=ratioComplete)){var pos=function(ratioComplete){var p=50*ratioComplete,diagonal=Math.ceil(Math.hypot(blocks/2,blocks/2)),r=p*blocks*.04;diagonal<r&&(complete=!0);var a=p/(1+-0*r)*20;return{x:Math.floor(blocks/2+Math.sin(a)*r),y:Math.floor(blocks/2+Math.cos(a)*r)}}(ratioComplete);!function(rot,pos){for(var go=!0,x=-1;x<2&&go;x++)for(var y=-1;y<2&&go;y++)for(var r=0;r<4&&go;r++)go=!drawShape((rot+r)%4,{x:pos.x+x,y:pos.y+y})}(r.getInteger(0,3),pos),attempt%100==0?setTimeout(function(){return drawSet()},10):drawSet()}},init=function(options){progress=options.progress||function(){},r.setSeed(options.seed),size=options.size,sw=options.sw||size,sh=options.sh||size,bmp.setSize(sw,sh),c.getRandomPalette();for(var ranges=[],i=8;i<size/8;i++){var d=size/i;Math.round(d)===d&&ranges.push(d)}blocks=ranges[r.getInteger(0,ranges.length-1)],block=1/blocks,occupied=new Array(blocks*blocks).fill(0),progress("settings:initialised",settings),ctx.fillStyle="#000",ctx.fillRect(0,0,sw,sh),ctx.translate(sw/2,sh/2),ctx.rotate(r.getNumber(0,2*Math.PI));var scale=r.getNumber(1.3,1.6);ctx.scale(scale,scale),drawSet()};return{stage:bmp.canvas,init:init,settings:settings,update:function(settings,seed){init({progress:progress,seed:seed,size:size,settings:settings})}}}};isNode?module.exports=tessellation():define("tessellation",tessellation);