"use strict";var con=console;var isNode=typeof module!=="undefined";if(isNode){var rand=require("./rand.js");var dom=require("./dom.js");var colours=require("./colours.js")}var text_grid=function text_grid(){var settings={boxes:{label:"Boxes",min:2,max:64,cur:7,type:"Number"},phrase:{label:"Phrase",cur:"D Q36RUCN    FGVNFVGQax6q2 b",type:"String"},background:{type:"Boolean",label:"Background",cur:true}};var bmp=dom.canvas(100,100);var ctx=bmp.ctx;var widthOnHeight=.6;var size,sw,sh,blockW,blockH;var rows;var cols;var phrase;function drawBlock(index,x,y){var w=1,h=1;ctx.save();ctx.translate(x*blockW,y*blockH);try{drawText(index)}catch(err){con.log("err drawText",err)}ctx.restore()}function drawText(index){var str=phrase[index];var xo=0;var yo=.8*blockH;var fontSize=.2*size;var font="Helvetica";ctx.font=fontSize+"px "+font;var gradient=ctx.createLinearGradient(0,-blockH,0,0);gradient.addColorStop(0,colours.getRandomColour());gradient.addColorStop(1,colours.getRandomColour());ctx.fillStyle=gradient;var textDimensions=ctx.measureText(str).width;xo=(blockW-textDimensions)/2;ctx.translate(xo,yo);ctx.fillText(str,0,0)}function init(options){size=options.size;sw=size;sh=size;if(options.settings){settings=options.settings}progress("settings:initialised",settings);phrase=settings.phrase.cur;cols=settings.boxes.cur;rows=Math.floor(phrase.length/cols);blockW=Math.ceil(1/cols*size);blockH=Math.ceil(blockW/widthOnHeight);bmp.setSize(sw,sh);ctx.clearRect(0,0,sw,sh);colours.getRandomPalette();colours.setPaletteRange(3);render()}function render(){if(settings.background.cur){}renderBatch(0)}function renderBatch(batch){var total=rows*cols;var x=batch%cols;var y=Math.floor(batch/cols);drawBlock(batch,x,y);if(batch<total-1){progress("render:progress",batch/total);setTimeout(function(){renderBatch(batch+1)},1)}else{progress("render:complete",bmp.canvas)}}function update(settings){init({size:size,settings:settings})}var experiment={stage:bmp.canvas,init:init,render:render,settings:settings,update:update};return experiment};if(isNode){module.exports=text_grid()}else{define("text_grid",text_grid)}