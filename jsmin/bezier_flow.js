"use strict";var con=console;var isNode=typeof module!=="undefined";if(isNode){var rand=require("./rand.js");var geom=require("./geom.js");var dom=require("./dom.js");var colours=require("./colours.js")}var bezier_flow=function bezier_flow(){var settings={renderlimit:{min:1,max:Number.POSITIVE_INFINITY,cur:1}};var sw,sh,size;var bmp=dom.canvas(100,100);var ctx=bmp.ctx;var lines,sections,points,lineStyles,exponential,scalePerLine;function getPoint(d){return points[(sections+d)%sections]}function init(options){con.log("init called",rand.getSeed());size=options.size;sw=size;sh=size;bmp.setSize(sw,sh);lines=rand.getInteger(100,500);settings.renderlimit.max=lines;settings.renderlimit.cur=lines;sections=rand.getInteger(3,6);con.log("sections",sections);exponential=rand.random()>.5;scalePerLine=rand.random()>.5;constantBaseLine=rand.random()>.5;points=[];lineStyles=[];colours.getRandomPalette();function baseLineWidth(){return 1+rand.random()*3}var fixedConstantBaseLine=baseLineWidth();for(var l=0;l<lines;l++){lineStyles[l]={strokeStyle:colours.getRandomColour(),lineWidth:constantBaseLine?fixedConstantBaseLine:baseLineWidth()}}var baseAngle=1e-4+rand.random()*Math.PI;var angleVariance=1/sections*.1;for(var p=0;p<sections;p++){var radius=.3+rand.random()*.1;var a=baseAngle+(p/sections+rand.getNumber(-angleVariance,angleVariance))*Math.PI*2;var cx=.5+Math.sin(a)*radius;var cy=.5+Math.cos(a)*radius;createPoint({index:p,cx:cx,cy:cy})}for(var p=0;p<sections;p++){points[p].angle()}ctx.clearRect(0,0,size,size);ctx.lineCap="round";render()}function createPoint(origin){var cx=origin.cx||rand.random();var cy=origin.cy||rand.random();var gapScale=rand.random()*.7/lines;var gaps=[];var total=0;for(var i=0;i<lines;i++){var gap=(.1+rand.random())*gapScale;gaps[i]=total;total+=gap*(exponential?Math.pow(2,1+i*.2)*.1:1)}points.push({index:origin.index,cx:cx,cy:cy,a:null,total:total,gaps:gaps,angle:function angle(){var prev=getPoint(this.index-1);var next=getPoint(this.index+1);var dx=next.cx-prev.cx;var dy=next.cy-prev.cy;this.a=-Math.atan(dy/dx)-(dx<0?0:Math.PI)},move:function move(){this.angle()},lines:function lines(i){var r=gaps[i]-.2;return[cx-Math.sin(this.a)*r,cy-Math.cos(this.a)*r]}})}function render(){ctx.clearRect(0,0,sw,sh);con.log("render ========================",settings.renderlimit.cur);for(var j=0;j<settings.renderlimit.cur;j++){for(var i=0,il=points.length;i<il;i++){var p1=getPoint(i-1);var p2=getPoint(i);p2.move();var m1=-Math.tan(p1.a);var m2=-Math.tan(p2.a);var p1l=p1.lines(j);var p2l=p2.lines(j);var x1=p1l[0],y1=p1l[1],x2=p2l[0],y2=p2l[1];var c1=y1-m1*x1;var c2=y2-m2*x2;var x1a=-.1;var y1a=m1*x1a+c1;var x1b=1.1;var y1b=m1*x1b+c1;var x2a=-.1;var y2a=m2*x2a+c2;var x2b=1.1;var y2b=m2*x2b+c2;var inter=geom.intersectionAnywhere({x:x1a,y:y1a},{x:x1b,y:y1b},{x:x2a,y:y2a},{x:x2b,y:y2b});ctx.strokeStyle=lineStyles[j].strokeStyle;ctx.lineWidth=lineStyles[j].lineWidth*(scalePerLine?(j+1)*.1:1);ctx.beginPath();ctx.moveTo(x1*size,y1*size);ctx.quadraticCurveTo(inter.x*size,inter.y*size,x2*size,y2*size);ctx.stroke()}}con.log("render complete called");progress("render:complete",bmp.canvas)}var experiment={stage:bmp.canvas,init:init,settings:settings,render:render};return experiment};if(isNode){module.exports=bezier_flow()}else{define("bezier_flow",bezier_flow)}