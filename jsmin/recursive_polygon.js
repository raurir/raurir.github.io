"use strict";var _slicedToArray=function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr))return function(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{!_n&&_i.return&&_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i);throw new TypeError("Invalid attempt to destructure non-iterable instance")},isNode="undefined"!=typeof module;if(isNode)var colours=require("./colours.js"),dom=require("./dom.js"),geom=require("./geom.js"),rand=require("./rand.js");var splitPolygon=function(array,start,end){var copy=array.slice(),chunk1=copy.slice(0,start+1),chunk3=copy.splice(end,array.length-end),chunk2=array.slice().splice(start,end-start+1);return[chunk1.concat(chunk3),chunk2]},getRotationRange=function(sides){return 3*(90-180*(sides-2)/sides||45)/180*Math.PI},recursive_polygon=function(){return function(){var progress,iterations,backgroundColour,insetDistance,insetLocked,insetLockedValue,insetThreshold,depthLocked,maxDepth,mutateAmount,mutateThreshold,sides,splitEdgeRatioLocked,splitLongest,wonky,isSierpinski,r=rand.instance(),c=colours.instance(r),size=500,sw=size,sh=size,settings={rotation:{type:"Number",label:"Rotation",min:0,max:9,cur:0},background:{type:"Boolean",label:"Background",cur:!0}},bmp=dom.canvas(sw,sh),ctx=bmp.ctx,drawNext=function(parent){var depth=parent.depth+1;if(!(maxDepth<depth||1e4<++iterations)){var copied=parent.points.slice(),len=copied.length,slicerStart=void 0,slicerEnd=void 0;if(3<len){var offset=r.getInteger(0,len),shifted=copied.splice(0,offset);copied=copied.concat(shifted),slicerStart=0,slicerEnd=r.getInteger(2,len-2)}else if(isSierpinski){var half01=geom.lerp(copied[0],copied[1],wonky?r.getNumber(.4,.6):.5),half12=geom.lerp(copied[1],copied[2],wonky?r.getNumber(.4,.6):.5),half20=geom.lerp(copied[2],copied[0],wonky?r.getNumber(.4,.6):.5),centreTriangle=[half01,half12,half20];settings.background.cur?drawPolygon(centreTriangle,{fillStyle:backgroundColour}):(bmp.ctx.globalCompositeOperation="destination-out",drawPolygon(centreTriangle,{fillStyle:"black"}),bmp.ctx.globalCompositeOperation="source-over"),drawSplit(parent,[copied[0],half01,half20],depth),drawSplit(parent,[copied[1],half12,half01],depth),drawSplit(parent,[copied[2],half20,half12],depth)}else{var edge=splitLongest?getLongest(copied):r.getInteger(0,2),splitRatio=splitEdgeRatioLocked||r.getNumber(.1,.9),newPoint=void 0;switch(edge){case 0:newPoint=geom.lerp(copied[0],copied[1],splitRatio),copied.splice(1,0,newPoint),slicerStart=1,slicerEnd=3;break;case 1:newPoint=geom.lerp(copied[1],copied[2],splitRatio),copied.splice(2,0,newPoint),slicerStart=0,slicerEnd=2;break;case 2:newPoint=geom.lerp(copied[2],copied[0],splitRatio),copied.push(newPoint),slicerStart=1,slicerEnd=3}}if(!isSierpinski){var _splitPolygon=splitPolygon(copied,slicerStart,slicerEnd),_splitPolygon2=_slicedToArray(_splitPolygon,2),arrayA=_splitPolygon2[0],arrayB=_splitPolygon2[1];drawSplit(parent,arrayA,depth),drawSplit(parent,arrayB,depth)}}},drawSplit=function(parent,points,depth){var colour=mutateThreshold&&r.random()<mutateThreshold?c.mutateColour(parent.colour,mutateAmount):c.getRandomColour(),inset=insetLocked?insetLockedValue:r.random()>insetThreshold;if(drawPolygon(points,{fillStyle:colour,strokeStyle:colour,lineWidth:0}),inset){var insetPoints=geom.insetPoints(points,insetDistance);if(insetPoints)geom.polygonsSimilar(points,insetPoints)&&(settings.background.cur?drawPolygon(insetPoints,{fillStyle:backgroundColour}):(ctx.globalCompositeOperation="destination-out",drawPolygon(insetPoints,{fillStyle:"black"}),ctx.globalCompositeOperation="source-over"))}(depthLocked||.2<r.random())&&drawNext({points:points,colour:colour,depth:depth})},drawPolygon=function(points,options){var _ref,lineWidth,strokeStyle,fillStyle;ctx.beginPath(),points.forEach(function(_ref2,i){var x=_ref2.x,y=_ref2.y;ctx[0==i?"moveTo":"lineTo"](x*size,y*size)}),ctx.closePath(),lineWidth=(_ref=options).lineWidth,strokeStyle=_ref.strokeStyle,fillStyle=_ref.fillStyle,lineWidth&&strokeStyle&&(ctx.strokeStyle=strokeStyle,ctx.lineWidth=lineWidth,ctx.stroke()),fillStyle&&(ctx.fillStyle=fillStyle,ctx.fill())},getLongest=function(points){for(var a,b,dx,dy,len=0,edgeIndex=null,i=0,il=points.length;i<il;i++){var p0=points[i],p1=points[(i+1)%il],p0p1Len=(b=p1,void 0,dx=(a=p0).x-b.x,dy=a.y-b.y,Math.hypot(dx,dy));len<p0p1Len&&(len=p0p1Len,edgeIndex=i)}return edgeIndex},init=function(options){iterations=0,progress=options.progress||function(){},size=options.size,sw=options.sw||size,sh=options.sh||size,r.setSeed(options.seed),c.getRandomPalette(),bmp.setSize(sw,sh),settings.rotation.cur=r.getInteger(0,9),settings.background.cur=3<r.getInteger(0,4),options.settings&&(settings=options.settings),progress("settings:initialised",settings),3===(sides=3+Math.round(r.random()*r.random()*r.random()*28))&&(isSierpinski=.8<r.random()),sides<5&&(wonky=.8<r.random()),insetDistance=r.getNumber(.001,.02),mutateThreshold=r.getInteger(0,1)&&r.getNumber(0,1),mutateAmount=r.getNumber(5,30),maxDepth=r.getInteger(1,8),depthLocked=.5<r.getNumber(0,1),splitLongest=.5<r.random(),splitEdgeRatioLocked=.5<r.random()&&.5,(insetLocked=.5<r.random())?insetLockedValue=.5<r.random():insetThreshold=.5*r.random();var startAngle=settings.rotation.cur/settings.rotation.max*getRotationRange(sides);backgroundColour=c.getRandomColour(),settings.background.cur?(ctx.fillStyle=backgroundColour,ctx.fillRect(0,0,sw,sh)):ctx.clearRect(0,0,sw,sh),ctx.save(),ctx.translate(.5*sw,.5*sh),ctx.rotate(startAngle),function(){for(var colour=c.getRandomColour(),i=0,angles=[];angles.length<sides;)angles.push(i/sides*Math.PI*2),i++;var points=angles.map(function(angle){var radius=wonky?r.getNumber(.4,.45):.45;return{x:Math.sin(angle)*radius,y:Math.cos(angle)*radius}});drawNext({points:points,colour:colour,depth:0})}(),progress("render:complete",bmp.canvas),ctx.restore()};return{init:init,settings:settings,stage:bmp.canvas,update:function(settings,seed){init({progress:progress,seed:seed,size:size,settings:settings})}}}};isNode?module.exports=recursive_polygon():define("recursive_polygon",recursive_polygon);